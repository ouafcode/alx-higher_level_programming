The ''0-add_integer'' module
============================

Using ''add_integer'' function
-----------------------------

This function to add two integers

>>> add_integer = __import__('0-add_integer').add_integer

Now use it:

>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100

Now in case float:

>>> add_integer(1.3, 2)
3
>>> add_integer(1, 3.2)
4
>>> add_integer(1.2, 3.2)
4

Now in case Empty:

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

Now check Raise Error:

>>> add_integer('hello', 2)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, 'hello')
Traceback (most recent call last):
TypeError: b must be an integer

Now check big numbers:

>>> add_integer(1000000000000000000000000000000000000000000, 2)
1000000000000000000000000000000000000000002

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1.2, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
